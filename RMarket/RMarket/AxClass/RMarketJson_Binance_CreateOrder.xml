<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>RMarketJson_Binance_CreateOrder</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DataContractAttribute]
public class RMarketJson_Binance_CreateOrder
{
    // POST /api/v3/order
    // https://developers.binance.com/docs/binance-spot-api-docs/rest-api/trading-endpoints
    [DataMember('symbol')]
    public str symbol;
    [DataMember('orderId')]
    public int64 orderId;
    [DataMember('orderListId')]
    public int64 orderListId;
    [DataMember('clientOrderId')]
    public str clientOrderId;
    [DataMember('transactTime')]
    public int64 transactTime;
    [DataMember('price')]
    public str price;
    [DataMember('origQty')]
    public str origQty;
    [DataMember('executedQty')]
    public str executedQty;
    [DataMember('cummulativeQuoteQty')]
    public str cummulativeQuoteQty;
    [DataMember('status')]
    public str status;
    [DataMember('timeInForce')]
    public str timeInForce;
    [DataMember('type')]
    public str type;
    [DataMember('side')]
    public str side;
    [DataMember('fills'), DataCollectionAttribute(Types::Class, classStr(RMarketJson_Binance_CreateOrder_Fill))]
    public List fills;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSymbol</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает символ торговой пары </summary>
    /// <param name="_symbol"> Символ торговой пары </param>
    /// <returns> Символ торговой пары </returns>
    public str parmSymbol(str _symbol = symbol)
    {
        symbol = _symbol;
        return symbol;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderId</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает ID ордера </summary>
    /// <param name="_orderId"> Уникальный идентификатор ордера </param>
    /// <returns> Уникальный идентификатор ордера </returns>
    public int64 parmOrderId(int64 _orderId = orderId)
    {
        orderId = _orderId;
        return orderId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrderListId</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает ID списка ордеров </summary>
    /// <param name="_orderListId"> Идентификатор списка ордеров (OCO) </param>
    /// <returns> Идентификатор списка ордеров </returns>
    public int64 parmOrderListId(int64 _orderListId = orderListId)
    {
        orderListId = _orderListId;
        return orderListId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmClientOrderId</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает клиентский ID ордера </summary>
    /// <param name="_clientOrderId"> Пользовательский идентификатор ордера </param>
    /// <returns> Пользовательский идентификатор ордера </returns>
    public str parmClientOrderId(str _clientOrderId = clientOrderId)
    {
        clientOrderId = _clientOrderId;
        return clientOrderId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTransactTime</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает время транзакции </summary>
    /// <param name="_transactTime"> Время исполнения ордера в мс </param>
    /// <returns> Время исполнения ордера в мс </returns>
    public int64 parmTransactTime(int64 _transactTime = transactTime)
    {
        transactTime = _transactTime;
        return transactTime;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrice</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает цену ордера </summary>
    /// <param name="_price"> Цена за единицу актива </param>
    /// <returns> Цена за единицу актива </returns>
    public str parmPrice(str _price = price)
    {
        price = _price;
        return price;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmOrigQty</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает исходное количество </summary>
    /// <param name="_origQty"> Исходное количество актива </param>
    /// <returns> Исходное количество актива </returns>
    public str parmOrigQty(str _origQty = origQty)
    {
        origQty = _origQty;
        return origQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmExecutedQty</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает исполненное количество </summary>
    /// <param name="_executedQty"> Исполненное количество актива </param>
    /// <returns> Исполненное количество актива </returns>
    public str parmExecutedQty(str _executedQty = executedQty)
    {
        executedQty = _executedQty;
        return executedQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCummulativeQuoteQty</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает суммарную стоимость </summary>
    /// <param name="_cummulativeQuoteQty"> Суммарная стоимость исполненных ордеров </param>
    /// <returns> Суммарная стоимость исполненных ордеров </returns>
    public str parmCummulativeQuoteQty(str _cummulativeQuoteQty = cummulativeQuoteQty)
    {
        cummulativeQuoteQty = _cummulativeQuoteQty;
        return cummulativeQuoteQty;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmStatus</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает статус ордера </summary>
    /// <param name="_status"> Текущий статус ордера </param>
    /// <returns> Текущий статус ордера </returns>
    public str parmStatus(str _status = status)
    {
        status = _status;
        return status;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmTimeInForce</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает режим исполнения </summary>
    /// <param name="_timeInForce"> Условие временного периода действия ордера </param>
    /// <returns> Условие временного периода действия ордера </returns>
    public str parmTimeInForce(str _timeInForce = timeInForce)
    {
        timeInForce = _timeInForce;
        return timeInForce;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmType</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает тип ордера </summary>
    /// <param name="_type"> Тип ордера (LIMIT, MARKET и др.) </param>
    /// <returns> Тип ордера </returns>
    public str parmType(str _type = type)
    {
        type = _type;
        return type;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSide</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает направление ордера </summary>
    /// <param name="_side"> Направление ордера (BUY/SELL) </param>
    /// <returns> Направление ордера </returns>
    public str parmSide(str _side = side)
    {
        side = _side;
        return side;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFills</Name>
				<Source><![CDATA[
    /// <summary> Получает или устанавливает список исполнений </summary>
    /// <param name="_fills"> Список частичных исполнений ордера </param>
    /// <returns> Список частичных исполнений ордера </returns>
    public List parmFills(List _fills = fills)
    {
        fills = _fills;
        return fills;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>